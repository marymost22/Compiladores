
Objetivos: Generar una consola de comandos que interpreta comandos matemáticos


- Bison es un programa que genera analizadores sintacticos 
- La consola de comandos debe de tener un prompt que permita al usuario escribir expresiones matemáticas.
- No vamos a generar código objeto, pues la consola interpreta y ejecuta.
. El usuario puede escribir "2+2", y al apretar el Intro, despues la consola interpretará y ejecutara.
- Se puede utilizar el ";" para indicar si se quiere hacer un Echo o no.
- La consola deberia realizar todas las operaciones matemáticas, incluso en notación cientifica. Se debe trabajar en notación cientifica por defecto. 
- A la hora de redactar la sintaxis de ese interprete, se debe tener en cuenta la precedencia de operadores + - * / ^ () 
- Incorporar funciones matemáticas básicas: trigonométricas
- Incorporar alguns constantes: PI, E
- La consola de ocmandos no solo ejecuta código, sería bueno que manejara la nocion de variable y permitir cosas como:
	x= 2* pi;
	y = sin(x);
  Para ello es bueno utilizar una tabla de símbolos (la de las otras prácticas). A nivel léxico hay que tratar los identificadores. Habrá tres tipos: constantes, variables y funciones. Cuando el analizador lexico encuentra el identificador, se le pregunta a la tabla de símbolos qué es. Puede que sea algo nuevo, o que ya esté insertada.
- Para implementar las funcioines (sin, cos, tng, ... ) implementar la nocion de libreria. Para que el usuario invoque a la funcion seno, es necesario que apareza ese identificador en la tabla de símbolos, y que no se pueda realizar para hacer una asignacion (sin = 2). Una forma es usar la librería de math.h de C. Asi pues, cuando se incluye, sabemos que si ejecutamos cualquier codigo en C, entonces se utilizará la implementacion sin() que esta en math.h. Para ello hay que analizar lexicamente (easy) , sintacticamente (expresion que se corresponde a una expresion bien formada) y semanticamente (cuando nos encontramos con sin, invocamos la funcion seno de math.h y se pasa el valor x).
- Tiene que poder responder a comandos introducidos en la propia consola. 
- Debe poder interpretar ficheros de comandos. Debe haber un comando para poder cargar el fichero (cargar, leer y ejecutarlo). Tambien se deberá poder arrancar la consola con el fichero desde el momento inicial.
- Es importante que tenga una ayuda que explique como utilizar la consola. Asi como un mensaje inicial que indique como acceder a dicha ayuda.
- Comando 'workspace', mostrar las variables y su contenido. Incluir algun comando para limpiar el workspace (eliminar variables)

Hay varias formas de hacerlo:
A nivel lexico: 
 1. introducir cada cadena al analizador léxico. -> NO RECOMENDABLE, dificil ampliacion.
 2. Gestionar a nivel lexico cada función a traves de la tabla de simbolos.

A nivel semantico: Trabajar con las funciones como punteros a funciones. Ejemplo en el manual de bison.

Como no se generará codigo objeto, necesitamos almacenar los valores de las variables. Esto se puede hacer en la tabla de símbolos. Para las variables se puede añadir un nuevo campo en la tabla, que se llame valor que se vaya actualizando.

Hay que tener cuidado con la gramática que se va a diseñar. Ejemplos en el manual de bison.  Es imporate que se comrpuebe el resulatdo de la compilación con bison: evitar errores reduccion - reduccion, reducción - desplazamiento.


Gestion de errores
- Utilizar la gestion de errores de bison: Saber si una expresión tiene parentesis mal emparejados; si se está realizadno alguna operacion incorrecta (dividir por 0, por ejemplo); advertir al usuario de la no inicialización de variables.
- La consola no se puede quedar bloqueada por un error.

Posibles extenciones
- Plantear el tema de matrices / vectores
- Funciones de más de un argumento: avg(x,y,z,...), min(x,y,z,...), etc

Gestion de tipos
- Se puede hacer gestion de tipos, pero puede ser muy complicado.
- Se puede hacer como python, mathlab, en la que la verificacion de tipos es dinámica. Se mete un valor a una varibale (z=5.2), y elegir el tipo más adecuado para su interpretacion, se pueden realizar cast implicitos, etc...

